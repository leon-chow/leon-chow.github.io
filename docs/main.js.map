{"version":3,"sources":["./src/app/contact.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/environments/environment.ts","./src/app/contact/form.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/resize.service.ts","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Form } from './contact/form';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n  // exposed API, but it should be okay\r\n  private emailApi = 'https://mailthis.to/Leon';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // function that takes formData as the parameter from the HTML template and sends the message\r\n  sendMessage(formData: Form) {\r\n    return this.http.post(this.emailApi, formData, { responseType: 'text'}).pipe(\r\n      (res: any) => {\r\n        if (res) {\r\n          return res;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        //console.log(error);\r\n        return error;\r\n      }\r\n    )\r\n  }\r\n}\r\n","import { ResizeService } from './../resize.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  // data to populate the table, hardcoded since this data will not change much\r\n  dataSource: any;\r\n  cols: string[] =[\"language\", \"framework\", \"editor\", \"database\"];\r\n  skills: {}[] = [\r\n    {\r\n      language: \"React\", framework: \"NodeJS\", editor: \"AWS\", database: \"SQL/NoSQL\"\r\n    },\r\n    {\r\n      language: \"Vue\", framework: \"Java\", editor: \"GCP\", database: \"CI/CD\"\r\n    },\r\n    {\r\n      language: \"Angular\", editor: \"Firebase\", \r\n    },\r\n    {\r\n      language: \"HTML/CSS\", editor: \"DynamoDB\",\r\n    },\r\n    {\r\n      language: \"Material UI\", editor: \"S3\",\r\n    },\r\n    {\r\n      language: \"Bootstrap\"\r\n    },\r\n    {\r\n      language: \"NextJS\"\r\n    },\r\n    {\r\n      language: \"JavaScript/TypeScript\"\r\n    }\r\n  ]\r\n\r\n  constructor(public resizeService: ResizeService) { }\r\n\r\n  ngOnInit(): void {\r\n    // initializing data source instance\r\n    this.dataSource = new MatTableDataSource(this.skills);\r\n  }\r\n\r\n}\r\n","<div [ngClass]=\"{'about': this.resizeService.mobileScreen === false, 'about-mobile': this.resizeService.mobileScreen === true}\">\r\n  <h1> About Me </h1>\r\n  <img class=\"img\" src=\"../../assets/images/me.jpg\" alt=\"Me\"> <br> <br>\r\n  <p>\r\n    Hello! My name is Leon Chow and I am full-stack developer with 3.5 years of experience in the field. I graduated with a degree in computer science at Ontario Tech University (formerly UOIT).\r\n    I am always seeking to broaden my professional experience in web/mobile development and enjoy learning new languages and technologies. Below, you can see a list\r\n    of skills that I have acquired, as well as a few links about me, mostly from the university. If you wish to contact me, you can fill out the form at the\r\n    bottom of the page, or you can email me at <u> leonwl.chow@gmail.com. </u>\r\n  </p>\r\n  <h2> Technical Skills Overview </h2>\r\n  <table mat-table [dataSource]=\"dataSource\" *ngIf=\"!this.resizeService.mobileScreen\" class=\"mat-elevation-z8\">\r\n    <!-- language Column -->\r\n    <ng-container matColumnDef=\"language\">\r\n      <th mat-header-cell *matHeaderCellDef> Languages </th>\r\n      <td mat-cell *matCellDef=\"let skillsOverview\"> {{skillsOverview.language}} </td>\r\n    </ng-container>\r\n\r\n    <!-- framework Column -->\r\n    <ng-container matColumnDef=\"framework\">\r\n      <th mat-header-cell *matHeaderCellDef> Backend </th>\r\n      <td mat-cell *matCellDef=\"let skillsOverview\"> {{skillsOverview.framework}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Editors/IDEs & Version Control Column -->\r\n    <ng-container matColumnDef=\"editor\">\r\n      <th mat-header-cell *matHeaderCellDef> Cloud </th>\r\n      <td mat-cell *matCellDef=\"let skillsOverview\"> {{skillsOverview.editor}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"database\">\r\n      <th mat-header-cell *matHeaderCellDef> Other </th>\r\n      <td mat-cell *matCellDef=\"let skillsOverview\"> {{skillsOverview.database}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"cols\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: cols;\"></tr>\r\n  </table>\r\n  <table class=\"mobile-table\" *ngIf=\"this.resizeService.mobileScreen\">\r\n    <tr>\r\n      <th> Frontend </th>\r\n      <th> Backend </th>\r\n      <th> Cloud </th>\r\n      <th> Other </th>\r\n    </tr>\r\n    <tr>\r\n      <td> React </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Vue </td>\r\n      <td> NodeJS </td>\r\n      <td> Java </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Angular </td>\r\n      <td> AWS </td>\r\n      <td> GCP </td>\r\n      <td> Jenkins </td>\r\n      <td> DynamoDB </td>\r\n      <td> S3 </td>\r\n    </tr>\r\n    <tr>\r\n      <td> HTML/CSS </td>\r\n      <td> SQL/NoSQL </td>\r\n      <td> CI/CD </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Material UI </td>\r\n      <td> Python </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Bootstrap </td>\r\n      <td> PHP </td>\r\n    </tr>\r\n    <tr>\r\n      <td> NextJS </td>\r\n      <td> C++ </td>\r\n    </tr>\r\n    <tr>\r\n      <td> JavaScript/TypeScript </td>\r\n    </tr>\r\n  </table>\r\n  <h2> Links about me: </h2>\r\n  <ul>\r\n    <li>\r\n      <a href=\"https://blog.ontariotechu.ca/co-ops-in-the-faculty-of-science\" target=\"_blank\"> Co-op Blog </a>\r\n    </li>\r\n    <li>\r\n      <a href=\"https://science.ontariotechu.ca/undergraduate/co-op%20programs/student-testimonials/computer-science/leon-chow.php\" target=\"_blank\"> Co-op Testimonial </a>\r\n    </li>\r\n    <li>\r\n      <a href=\"https://www.clarifai.com/blog/clarifai-featured-hack-helping-small-businesses-say-hai-to-their-customers\" target=\"_blank\"> Intuit SmallBiz Hack Clarifai Blog </a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","// form class data\r\nexport class Form {\r\n  constructor(\r\n    public name: string,\r\n    public message: string,\r\n  ) { }\r\n}\r\n","import { Component, HostListener } from '@angular/core';\r\nimport { ResizeService } from './resize.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'leon-chow';\r\n  mobileScreen: Boolean = false;\r\n\r\n  // onResize, checks if the width and height are less than or equal to 600, will switch to mobile view\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize() {\r\n    this.resizeService.mobileScreen = window.innerHeight <= 600 || window.innerWidth <= 600;\r\n    console.log(`Width: ${window.innerHeight}, width: ${window.innerWidth}`);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.resizeService.mobileScreen = window.innerHeight <= 600 || window.innerWidth <= 600;\r\n  }\r\n\r\n  constructor(public resizeService: ResizeService) {}\r\n}\r\n","<app-header> </app-header>\r\n<body>\r\n  <router-outlet></router-outlet>\r\n</body>\r\n","import { ResizeService } from './resize.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatGridList, MatGridListModule } from '@angular/material/grid-list'\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle'\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    ProjectsComponent,\r\n    AboutComponent,\r\n    ContactComponent,\r\n    MainComponent,\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatGridListModule,\r\n    MatSnackBarModule,\r\n    MatButtonToggleModule,\r\n    MatTableModule,\r\n  ],\r\n  providers: [ResizeService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ResizeService } from './../resize.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Form } from './form';\r\nimport { Component, HostListener, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ContactService } from './../contact.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  form = new Form('','');\r\n\r\n  constructor(private contactService: ContactService, public snackBar: MatSnackBar, public resizeService: ResizeService) {\r\n  }\r\n\r\n  // init empty fields\r\n  ngOnInit(): void {\r\n    this.form.name = '';\r\n    this.form.message = '';\r\n  }\r\n\r\n  // confirmation that will appear once the form is valid and submitted\r\n  submitConfirmation() {\r\n    this.snackBar.open(\"Successfully sent message!\", \"Dismiss\", {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  // handles form submission, used template driven forms here\r\n  submitForm() {\r\n    this.submitConfirmation();\r\n    this.contactService.sendMessage(this.form).subscribe(\r\n      res => {\r\n        //console.log(res);\r\n      }, (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.form.name = '';\r\n    this.form.message = '';\r\n  }\r\n}\r\n","<div [ngClass]=\"{'contact-form': this.resizeService.mobileScreen === false, 'contact-form-mobile': this.resizeService.mobileScreen === true}\">\r\n  <h1>\r\n    Contact Me!\r\n  </h1>\r\n  <p> Please fill out the form below to contact me and I will try to reach back within 3 business days. </p>\r\n  <form #contactForm=\"ngForm\" (ngSubmit)=\"submitForm()\">\r\n    <div class=\"form-container\">\r\n      <mat-form-field #name required>\r\n        <mat-label>Name</mat-label>\r\n        <input required type=\"text\" id=\"name\" [(ngModel)]=\"form.name\" name=\"name\" #name=\"ngModel\" matInput>\r\n      </mat-form-field> <br>\r\n      <mat-form-field>\r\n        <mat-label>Message </mat-label>\r\n        <textarea required [(ngModel)]=\"form.message\" name=\"message\" matInput rows=\"5\" #message=\"ngModel\" cols=\"40\"> </textarea>\r\n      </mat-form-field> <br>\r\n      <button class=\"button\" type=\"submit\" [disabled]=\"!contactForm.form.valid\" mat-raised-button> Submit </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { ResizeService } from './../resize.service';\r\nimport { Component, HostListener, OnInit } from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations'\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n    animations: [\r\n      trigger(\r\n        'enterAnimation', [\r\n          transition(':enter', [\r\n            style({opacity: 0}),\r\n            animate('250ms', style({height: .15, opacity: 1}))\r\n          ]),\r\n          transition(':leave', [\r\n            animate('250ms', style({height: .15, opacity: 0}))\r\n          ])\r\n        ]\r\n      )\r\n    ],\r\n})\r\n\r\nexport class HeaderComponent implements OnInit {\r\n  links: Array<string> = ['Projects', 'About', 'Contact'];\r\n  isSticky: boolean = false;\r\n  toggleDropdown: boolean = false;\r\n\r\n  // event to check if page is scrolled vertically of at least 50px, which will make the sticky header appear\r\n  @HostListener('window:scroll', ['$event'])\r\n  checkScroll() {\r\n    this.isSticky = window.pageYOffset >= 50;\r\n  }\r\n\r\n  constructor(public resizeService: ResizeService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<mat-toolbar class=\"header\">\r\n  <mat-toolbar-row>\r\n    <span [ngClass]=\"{'title': this.resizeService.mobileScreen === false, 'mobile-title': this.resizeService.mobileScreen === true}\">\r\n      <h1>\r\n        Leon Chow\r\n      </h1>\r\n    </span>\r\n    <span>\r\n      <button mat-icon-button>\r\n        <a href=\"../../assets/files/Leon_Chow_Resume.pdf\" target=\"_blank\">\r\n          <mat-icon class=\"pdf-icon\"> picture_as_pdf </mat-icon>\r\n        </a>\r\n      </button>\r\n      <button mat-icon-button>\r\n        <a href=\"https://github.com/leon-chow\" target=\"_blank\">\r\n          <img src=\"../../assets/icons/GitHub-Mark-Light-32px.png\">\r\n        </a>\r\n      </button>\r\n      <button mat-icon-button>\r\n        <a href=\"https://www.linkedin.com/in/leon-chow/\" target=\"_blank\">\r\n          <img class=\"icon\" src=\"../../assets/icons/linkedin-3-xxl.png\">\r\n        </a>\r\n      </button>\r\n    </span>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n<mat-toolbar *ngIf=\"isSticky\" class=\"float-header\"\r\n[ngClass]=\"{'mat-elevation-z5' : true, 'sticky' : isSticky}\"\r\n[@enterAnimation]>\r\n  <mat-toolbar-row>\r\n    <span [ngClass]=\"{'title': this.resizeService.mobileScreen === false, 'mobile-title': this.resizeService.mobileScreen === true}\">\r\n      <h1>\r\n        Leon Chow\r\n      </h1>\r\n    </span>\r\n    <span>\r\n      <button mat-icon-button>\r\n        <a download=\"../../assets/files/Leon_Chow_Resume.pdf\" target=\"_blank\">\r\n          <mat-icon class=\"pdf-icon\"> picture_as_pdf </mat-icon>\r\n        </a>\r\n      </button>\r\n      <button mat-icon-button>\r\n        <a href=\"https://github.com/leon-chow\" target=\"_blank\">\r\n          <img src=\"../../assets/icons/GitHub-Mark-Light-32px.png\">\r\n        </a>\r\n      </button>\r\n      <button mat-icon-button>\r\n        <a href=\"https://www.linkedin.com/in/leon-chow/\" target=\"_blank\">\r\n          <img class=\"icon\" src=\"../../assets/icons/linkedin-3-xxl.png\">\r\n        </a>\r\n      </button>\r\n    </span>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  // used to store the array of links\r\n  links: Array<string> = ['Projects', 'About', 'Contact'];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"links\">\r\n  <div *ngFor=\"let link of links\">\r\n    <a class=\"link-text\" [routerLink]=\"'.'\" [fragment]=\"link\">\r\n      <button mat-flat-button class=\"link\"> {{ link }} </button>\r\n    </a>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\r\n\r\nimport { MainComponent } from './main/main.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    // default\r\n    path: '', component: MainComponent\r\n  },\r\n  {\r\n    // wildcard, redirect\r\n    path: '**', pathMatch: 'full', redirectTo: ''\r\n  },\r\n];\r\n\r\n// used to allow page jumping when a link is clicked, for fragments\r\nconst routerOptions: ExtraOptions = {\r\n  scrollPositionRestoration: 'enabled',\r\n  anchorScrolling: 'enabled',\r\n  scrollOffset: [0, 25],\r\n};\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, routerOptions)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { ResizeService } from './../resize.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n  // stores the array of links for appropriate fragments\r\n  links: Array<string> = ['About', 'Projects', 'Contact'];\r\n\r\n  constructor(public resizeService: ResizeService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"drawer\">\r\n  <mat-drawer-container autosize class=\"drawer\">\r\n    <mat-drawer class=\"side-drawer\" *ngIf=\"!this.resizeService.mobileScreen\" mode=\"side\" opened=\"!this.resizeService.mobileScreen\">\r\n      <app-navbar> </app-navbar>\r\n    </mat-drawer>\r\n    <mat-drawer-content>\r\n      <div align=\"center\">\r\n        <div class=\"hero-div\">\r\n          <div [ngClass]=\"{'hero-text': this.resizeService.mobileScreen === false, 'mobile-hero-text': this.resizeService.mobileScreen === true}\"> Welcome to my Website! </div>\r\n          <img class=\"hero-image\" src=\"../../assets/images/night_sky.jpg\">\r\n        </div>\r\n        <app-projects [attr.id]=\"links[1]\"> </app-projects>\r\n        <app-about [attr.id]=\"links[0]\"> </app-about>\r\n        <app-contact [attr.id]=\"links[2]\"> </app-contact>\r\n      </div>\r\n    </mat-drawer-content>\r\n  </mat-drawer-container>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResizeService {\r\n  // global variable to be used for screen sizes, will look into fixing this in the future when im more experienced\r\n  mobileScreen: boolean = false;\r\n\r\n  constructor() { }\r\n}\r\n","import { ResizeService } from './../resize.service';\r\nimport { Component, HostListener, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n  cols: number = 2;\r\n  constructor(public resizeService: ResizeService) { }\r\n\r\n  // initial resizing of the columns for the projects grid view\r\n  ngOnInit(): void {\r\n    this.cols = this.resizeService.mobileScreen ? this.cols = 1 : this.cols = 2;\r\n  }\r\n\r\n  // on resize event, will check if screen is mobile to reduce the projects grid view columns to 1\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize() {\r\n    this.cols = this.resizeService.mobileScreen ? this.cols = 1 : this.cols = 2;\r\n  }\r\n}\r\n","<div [ngClass]=\"{'projects': this.resizeService.mobileScreen === false, 'projects-mobile': this.resizeService.mobileScreen === true}\">\r\n  <h1> Personal Projects </h1>\r\n  <mat-grid-list [cols]=\"cols\" rowHeight=\"52rem\" rowWidth=\"3rem\">\r\n    <mat-grid-tile>\r\n      <div>\r\n        <h2>\r\n          University Companion App\r\n          <button mat-stroked-button class=\"button\">\r\n            <a href=\"https://github.com/leon-chow/otu-companion\" target=\"_blank\">\r\n              <img class=\"icon\" src=\"../../assets/icons/GitHub-Mark-Light-32px.png\">\r\n            </a>\r\n          </button>\r\n        </h2>\r\n        <img class=\"img\" src=\"../../assets/images/otu_companion_demo.gif\">\r\n        <p> Skills leveraged: Dart | Flutter | Firebase </p>\r\n      </div>\r\n     </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <div>\r\n        <h2>\r\n          TCG Deck Builder (WIP)\r\n        </h2>\r\n        <video muted autoplay width=\"700px\" height=\"500px\" controls src=\"../../assets/images/tcg_deck_builder_demo.mp4\"> </video>\r\n        <p>\r\n          Skills leveraged: React | NextJS | Material UI\r\n        </p>\r\n      </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <div>\r\n        <h2>\r\n          Mock Auction System\r\n          <button mat-stroked-button class=\"button\">\r\n            <a href=\"https://github.com/leon-chow/sqa-backend\" target=\"_blank\">\r\n              <img class=\"icon\" src=\"../../assets/icons/GitHub-Mark-Light-32px.png\">\r\n            </a>\r\n          </button>\r\n        </h2>\r\n        <img class=\"img\" src=\"../../assets/images/sqa_mock_auction_system_daily_script.png\">\r\n        <p> Skills leveraged: C++ | Java | Shell | JUnit </p>\r\n      </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <div>\r\n        <h2>\r\n          More coming soon...\r\n        </h2>\r\n      </div>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}